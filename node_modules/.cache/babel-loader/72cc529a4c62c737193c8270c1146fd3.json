{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aleksandrstupak/Test-task-Front-end-developer-/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchData),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchFetch);\n\nimport { call, put, all, takeEvery } from 'redux-saga/effects';\nimport axios from \"axios\";\nimport { getItems } from '../actions/getItemsAction';\nimport * as a from '../constants';\nimport { getTemplatesSuccess } from '../actions/getTemplates';\nexport function fetchData() {\n  var data, template;\n  return _regeneratorRuntime.wrap(function fetchData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(function () {\n            return axios.get(\"http://demo4452328.mockable.io/properties\").then(function (data) {\n              return data.status === 200 ? data.data : [];\n            });\n          });\n\n        case 3:\n          data = _context.sent;\n          _context.next = 6;\n          return call(function () {\n            return axios.get(\"http://demo4452328.mockable.io/templates\").then(function (data) {\n              return data.status === 200 ? data.data : [];\n            });\n          });\n\n        case 6:\n          template = _context.sent;\n          _context.next = 9;\n          return put(getItems(data.data));\n\n        case 9:\n          _context.next = 11;\n          return put(getTemplatesSuccess(template));\n\n        case 11:\n          _context.next = 17;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 17;\n          return put(function (error) {\n            return console.log(error);\n          });\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 13]]);\n}\nexport default function watchFetch() {\n  return _regeneratorRuntime.wrap(function watchFetch$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(a.FETCH_REQUEST, fetchData);\n\n        case 2:\n          _context2.next = 4;\n          return takeEvery(a.FETCH_REQUEST, fetchData);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n} //     try {\n//\n//         const [posts, users, comments] = yield all([\n//             call(() => {\n//                 return axios.get(urlPosts)\n//                     .then(data => data.status === 200 ? data.data : [])\n//\n//             }),\n//             call(() => {\n//                 return axios.get(urlUsers)\n//                     .then(data => data.status === 200 ? data.data : [])\n//\n//             }),\n//             call(() => {\n//                 return axios.get(urlComments)\n//                     .then(data => data.status === 200 ? data.data : [])\n//\n//             }),\n//         ]);\n//         yield put(addPost(posts));\n//         yield put(addUsers(users));\n//         yield put(addComments(comments));\n//\n//     }catch (error) {\n//         yield put(() => {console.log('Getting data from server error: ' + error)})\n//     }\n// }\n//\n//","map":{"version":3,"sources":["/Users/aleksandrstupak/Test-task-Front-end-developer-/src/Components/redux/redux-saga/sagas.js"],"names":["fetchData","watchFetch","call","put","all","takeEvery","axios","getItems","a","getTemplatesSuccess","get","then","data","status","template","error","console","log","FETCH_REQUEST"],"mappings":";;;;yBAKiBA,S;;;yBAoBQC,U;;AAzBzB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAwBC,SAAxB,QAA0C,oBAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AACA,OAAO,KAAKC,CAAZ,MAAmB,cAAnB;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,OAAO,SAAUT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAME,IAAI,CAAC,YAAM;AACtB,mBAAOI,KAAK,CAACI,GAAN,8CACFC,IADE,CACG,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsBD,IAAI,CAACA,IAA3B,GAAkC,EAAtC;AAAA,aADP,CAAP;AAEH,WAHkB,CAAV;;AAFd;AAEOA,UAAAA,IAFP;AAAA;AAQkB,iBAAMV,IAAI,CAAC,YAAM;AAC9B,mBAAOI,KAAK,CAACI,GAAN,6CACFC,IADE,CACG,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsBD,IAAI,CAACA,IAA3B,GAAkC,EAAtC;AAAA,aADP,CAAP;AAEH,WAH0B,CAAV;;AARlB;AAQOE,UAAAA,QARP;AAAA;AAaC,iBAAMX,GAAG,CAACI,QAAQ,CAACK,IAAI,CAACA,IAAN,CAAT,CAAT;;AAbD;AAAA;AAcC,iBAAMT,GAAG,CAACM,mBAAmB,CAACK,QAAD,CAApB,CAAT;;AAdD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAgBC,iBAAMX,GAAG,CAAC,UAAAY,KAAK;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,WAAN,CAAT;;AAhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBP,eAAe,SAAUd,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMI,SAAS,CAACG,CAAC,CAACU,aAAH,EAAkBlB,SAAlB,CAAf;;AADW;AAAA;AAEX,iBAAMK,SAAS,CAACG,CAAC,CAACU,aAAH,EAAkBlB,SAAlB,CAAf;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAOf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { call, put, all,takeEvery, } from 'redux-saga/effects';\nimport axios from \"axios\";\nimport {getItems} from '../actions/getItemsAction';\nimport * as a from '../constants';\nimport { getTemplatesSuccess } from '../actions/getTemplates';\nexport function* fetchData() {\n    try {\n        const data = yield call(() => {\n                return axios.get(`http://demo4452328.mockable.io/properties`)\n                    .then(data => data.status === 200 ? data.data : [])\n            }\n        );\n       \n        const template = yield call(() => {\n            return axios.get(`http://demo4452328.mockable.io/templates`)\n                .then(data => data.status === 200 ? data.data : [])\n        }\n    );\n        yield put(getItems(data.data));\n        yield put(getTemplatesSuccess(template))\n    } catch (error) {\n        yield put(error => console.log(error));\n    }\n}\n\nexport default function* watchFetch() {\n    yield takeEvery(a.FETCH_REQUEST, fetchData);\n    yield takeEvery(a.FETCH_REQUEST, fetchData);\n\n}\n\n\n//     try {\n//\n//         const [posts, users, comments] = yield all([\n//             call(() => {\n//                 return axios.get(urlPosts)\n//                     .then(data => data.status === 200 ? data.data : [])\n//\n//             }),\n//             call(() => {\n//                 return axios.get(urlUsers)\n//                     .then(data => data.status === 200 ? data.data : [])\n//\n//             }),\n//             call(() => {\n//                 return axios.get(urlComments)\n//                     .then(data => data.status === 200 ? data.data : [])\n//\n//             }),\n//         ]);\n//         yield put(addPost(posts));\n//         yield put(addUsers(users));\n//         yield put(addComments(comments));\n//\n//     }catch (error) {\n//         yield put(() => {console.log('Getting data from server error: ' + error)})\n//     }\n// }\n//\n//"]},"metadata":{},"sourceType":"module"}